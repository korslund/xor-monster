singleton MyClass
{
};

/* Automatic singletons seem like a nice idea on the surface. The
   problem with them though is pretty much the same as the problem
   with static class variables and other "global" shared state:

   Where exactly does the "shared" instance exist? And who shares it?

   Is it shared with libraries? Is it shared across every program
   running on the same system? Is it shared with embedded scripts and
   programs loaded within the main program? Does the user get any say
   in where the boundary is drawn, or is it arbitrary? What if you
   WANT to create multiple "virtual" instances of your program within
   one instance?

   These questions don't have a good answer, and that is why ALL
   non-explicitly shared state is a Bad Idea (TM).
 */
